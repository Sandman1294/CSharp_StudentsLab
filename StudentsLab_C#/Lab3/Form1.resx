<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        FcZwhjW84cYGBAA7
</value>
  </data>
</root>